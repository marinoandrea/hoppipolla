name: CI

on:
  push:
    branches:
      - main
      - workflows # for testing
  pull_request:
    branches:
      - main

jobs:
  nip-proxy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./services/nip-proxy

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: nip-proxy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build . -t eu.gcr.io/hoppipolla/nip-proxy:${{ github.sha }}

  path-analyzer:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./services/path-analyzer

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: path-analyzer

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build . -t eu.gcr.io/hoppipolla/path-analyzer:${{ github.sha }}

  policy-manager:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./services/policy-manager

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with dev

      - name: Run tests
        run: poetry run python -m coverage run -m pytest

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: policy-manager

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build . -t eu.gcr.io/hoppipolla/policy-manager:${{ github.sha }}
