syntax = "proto3";

import "google/protobuf/empty.proto";
import "path.proto";

package hoppipolla.policy;

// Body responsible for issuing a policy.
//
// It can be a governmental entity, an association, an organization,
// or even an individual.
message Issuer {
  string id = 1;
  string name = 2;
  optional string description = 3;
}

// Policy validating a path based on hops and relative NIP data using 
// Hoppipolla ASP conventions.
message Policy {
  string id = 1;
  string issuer_id = 2;
  bool active = 3;
  string statements = 4;
  optional string description = 5;
}

service PolicyManager {
  rpc CreatePolicy(CreatePolicyRequest) returns (CreatePolicyResponse) {}
  rpc DeletePolicy(DeletePolicyRequest) returns (google.protobuf.Empty) {}
  rpc CreateIssuer(CreateIssuerRequest) returns (CreateIssuerResponse) {}
  rpc ListPolicies(google.protobuf.Empty) returns (ListPoliciesResponse) {}
  rpc ValidatePath(ValidatePathRequest) returns (ValidatePathResponse) {}
  rpc GetLatestPolicyTimestamp(google.protobuf.Empty)
    returns (GetLatestPolicyTimestampResponse) {}
  rpc GetDefaultIssuer(google.protobuf.Empty) 
    returns (GetDefaultIssuerResponse) {}
}

message CreatePolicyRequest { 
  string issuer_id = 1;
  string statements = 2;
  optional string description = 3; 
}
message CreatePolicyResponse { 
  string id = 1; 
}

message DeletePolicyRequest { 
  string id = 1; 
}

message CreateIssuerRequest { 
  string name = 1;
 }
message CreateIssuerResponse { 
  string id = 1; 
}

message ListPoliciesResponse {
  repeated Policy policies = 1;
}

message ValidatePathRequest { 
  hoppipolla.path.Path path = 1; 
  string start_time = 2; // ISO formatted datetime
  string end_time = 3;  // ISO formatted datetime
}
message ValidatePathResponse {
  string fingerprint = 1;
  bool valid = 2;
}

message GetLatestPolicyTimestampResponse { 
  string timestamp = 1; // ISO formatted datetime 
}

message GetDefaultIssuerResponse {
  string id = 1;
  string name = 2;
  optional string description = 3;
}